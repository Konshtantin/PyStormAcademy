<h2 class='ls-title first'>Комментарии в Python</h2>
<p>Комментарий - это фрагмент текста в программе, который не выполняется. Его можно использовать для предоставления дополнительной информации, помогающей разобраться в коде. Комментарии выделяются на фоне исполняемого кода:</p>
<div class='code'><pre><code class='language-python'># Однострочный комментарий
name = "Mike" # Комментарий после кода</code></pre></div>
<p>Чтобы закомментировать строку, перед ней ставят символ <span class="line-code">#</span>. Однако сам хеш-символ внутри строкового значения не рассматривается как комментарий.</p>
<div class='code'><pre><code class='language-python'># внутри кавычек хеш-символ не является началом комментария

print("Все комментарии - это #, но не все # - комментарии")</code></pre></div>
<h2 class='ls-title'>Однострочные и многострочные</h2>
<p>Вообще, комментарии бывают двух видов: однострочные и многострочные. Но в Python нет определенной конструкции, чтобы создать многострочный комментарий. Вместо этого предлагается использовать несколько однострочных.</p>
<div class='code'><pre><code class='language-python'># Комментарий 1
# print("Halio Worlda")
# 2 + 4 = 6
</code></pre></div>
<p>В большенстве редакторов кода, включая нашу IDE, можно выделить несколько строк кода и нажать <span class="line-code">CTRL + /</span> (на Mac <span class="line-code">Command + /</span>), чтобы закомментировать или раскомментировать участок кода.</p>
<h2 class='ls-title'>Польза комментариев</h2>
<p>Комментирование кода считается хорошей практикой для разработчиков. Они делают программы более читаемыми и пригодными для последующей поддержки. Хорошее практическое правило - добавлять комментарии к любой строке кода или к фрагменту кода, цель которого не очевидна. Не менее полезны комментарии во время тестирования программы. Удобно закоментировать ту часть кода, котовая слабо относится к проблемному месту.</p>

